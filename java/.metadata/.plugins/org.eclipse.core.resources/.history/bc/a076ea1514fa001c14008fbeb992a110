package com.example.manualizer.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

	@Override
	public void configure(WebSecurity web) throws Exception {
		web.ignoring().antMatchers("/img/**",
									"/css/**",
									"/js/**"
									);
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception{
		http
			.authorizeRequests()
				.antMatchers("/login").permitAll()// login.htmlはログイン不要でアクセス可能
				.anyRequest().authenticated()// 上記以外は直リンク禁止
				.and()
			.formLogin()
				.loginPage("/login")//ログインページ
				//.loginProcessingUrl("/sign_in")//ログイン処理のパス
				//.usernameParameter("username") // リクエストパラメータのname属性を明示
				//.passwordParameter("password")
				//.successForwardUrl("/hello")
				//.failureUrl("/login?error")
				.permitAll()
				.and()
			.logout()
				//.logoutUrl("/logout")
				//.logoutSuccessUrl("/login?logout")
				.permitAll();
	}
	
	@Autowired
	public void configure(AuthenticationManagerBuilder auth) throws Exception{
		auth
			.inMemoryAuthentication()
				.withUser("user").password("{noop}password").roles("USER");
	}

}
